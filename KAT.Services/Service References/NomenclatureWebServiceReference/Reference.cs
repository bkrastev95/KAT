//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36264
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KAT.Services.NomenclatureWebServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Violation", Namespace="http://schemas.datacontract.org/2004/07/KAT.Web.Models")]
    [System.SerializableAttribute()]
    public partial class Violation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Camera", Namespace="http://schemas.datacontract.org/2004/07/KAT.Web.Models")]
    [System.SerializableAttribute()]
    public partial class Camera : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Policeman", Namespace="http://schemas.datacontract.org/2004/07/KAT.Web.Models")]
    [System.SerializableAttribute()]
    public partial class Policeman : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private KAT.Services.NomenclatureWebServiceReference.Nomenclature RankField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public KAT.Services.NomenclatureWebServiceReference.Nomenclature Rank {
            get {
                return this.RankField;
            }
            set {
                if ((object.ReferenceEquals(this.RankField, value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nomenclature", Namespace="http://schemas.datacontract.org/2004/07/KAT.Web.Models")]
    [System.SerializableAttribute()]
    public partial class Nomenclature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NomenclatureWebServiceReference.INomenclatureWebService")]
    public interface INomenclatureWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/GetViolations", ReplyAction="http://tempuri.org/INomenclatureWebService/GetViolationsResponse")]
        KAT.Services.NomenclatureWebServiceReference.Violation[] GetViolations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/GetViolations", ReplyAction="http://tempuri.org/INomenclatureWebService/GetViolationsResponse")]
        System.Threading.Tasks.Task<KAT.Services.NomenclatureWebServiceReference.Violation[]> GetViolationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/AddViolation", ReplyAction="http://tempuri.org/INomenclatureWebService/AddViolationResponse")]
        bool AddViolation(KAT.Services.NomenclatureWebServiceReference.Violation violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/AddViolation", ReplyAction="http://tempuri.org/INomenclatureWebService/AddViolationResponse")]
        System.Threading.Tasks.Task<bool> AddViolationAsync(KAT.Services.NomenclatureWebServiceReference.Violation violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/DeleteViolation", ReplyAction="http://tempuri.org/INomenclatureWebService/DeleteViolationResponse")]
        bool DeleteViolation(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/DeleteViolation", ReplyAction="http://tempuri.org/INomenclatureWebService/DeleteViolationResponse")]
        System.Threading.Tasks.Task<bool> DeleteViolationAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/UpdateViolation", ReplyAction="http://tempuri.org/INomenclatureWebService/UpdateViolationResponse")]
        bool UpdateViolation(KAT.Services.NomenclatureWebServiceReference.Violation violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/UpdateViolation", ReplyAction="http://tempuri.org/INomenclatureWebService/UpdateViolationResponse")]
        System.Threading.Tasks.Task<bool> UpdateViolationAsync(KAT.Services.NomenclatureWebServiceReference.Violation violation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/GetCameras", ReplyAction="http://tempuri.org/INomenclatureWebService/GetCamerasResponse")]
        KAT.Services.NomenclatureWebServiceReference.Camera[] GetCameras();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/GetCameras", ReplyAction="http://tempuri.org/INomenclatureWebService/GetCamerasResponse")]
        System.Threading.Tasks.Task<KAT.Services.NomenclatureWebServiceReference.Camera[]> GetCamerasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/AddCamera", ReplyAction="http://tempuri.org/INomenclatureWebService/AddCameraResponse")]
        bool AddCamera(KAT.Services.NomenclatureWebServiceReference.Camera camera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/AddCamera", ReplyAction="http://tempuri.org/INomenclatureWebService/AddCameraResponse")]
        System.Threading.Tasks.Task<bool> AddCameraAsync(KAT.Services.NomenclatureWebServiceReference.Camera camera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/DeleteCamera", ReplyAction="http://tempuri.org/INomenclatureWebService/DeleteCameraResponse")]
        bool DeleteCamera(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/DeleteCamera", ReplyAction="http://tempuri.org/INomenclatureWebService/DeleteCameraResponse")]
        System.Threading.Tasks.Task<bool> DeleteCameraAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/UpdateCamera", ReplyAction="http://tempuri.org/INomenclatureWebService/UpdateCameraResponse")]
        bool UpdateCamera(KAT.Services.NomenclatureWebServiceReference.Camera camera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/UpdateCamera", ReplyAction="http://tempuri.org/INomenclatureWebService/UpdateCameraResponse")]
        System.Threading.Tasks.Task<bool> UpdateCameraAsync(KAT.Services.NomenclatureWebServiceReference.Camera camera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/GetPolicemen", ReplyAction="http://tempuri.org/INomenclatureWebService/GetPolicemenResponse")]
        KAT.Services.NomenclatureWebServiceReference.Policeman[] GetPolicemen();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/GetPolicemen", ReplyAction="http://tempuri.org/INomenclatureWebService/GetPolicemenResponse")]
        System.Threading.Tasks.Task<KAT.Services.NomenclatureWebServiceReference.Policeman[]> GetPolicemenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/AddPoliceman", ReplyAction="http://tempuri.org/INomenclatureWebService/AddPolicemanResponse")]
        bool AddPoliceman(KAT.Services.NomenclatureWebServiceReference.Policeman policeman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/AddPoliceman", ReplyAction="http://tempuri.org/INomenclatureWebService/AddPolicemanResponse")]
        System.Threading.Tasks.Task<bool> AddPolicemanAsync(KAT.Services.NomenclatureWebServiceReference.Policeman policeman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/DeletePoliceman", ReplyAction="http://tempuri.org/INomenclatureWebService/DeletePolicemanResponse")]
        bool DeletePoliceman(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/DeletePoliceman", ReplyAction="http://tempuri.org/INomenclatureWebService/DeletePolicemanResponse")]
        System.Threading.Tasks.Task<bool> DeletePolicemanAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/UpdatePoliceman", ReplyAction="http://tempuri.org/INomenclatureWebService/UpdatePolicemanResponse")]
        bool UpdatePoliceman(KAT.Services.NomenclatureWebServiceReference.Policeman policeman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INomenclatureWebService/UpdatePoliceman", ReplyAction="http://tempuri.org/INomenclatureWebService/UpdatePolicemanResponse")]
        System.Threading.Tasks.Task<bool> UpdatePolicemanAsync(KAT.Services.NomenclatureWebServiceReference.Policeman policeman);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INomenclatureWebServiceChannel : KAT.Services.NomenclatureWebServiceReference.INomenclatureWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NomenclatureWebServiceClient : System.ServiceModel.ClientBase<KAT.Services.NomenclatureWebServiceReference.INomenclatureWebService>, KAT.Services.NomenclatureWebServiceReference.INomenclatureWebService {
        
        public NomenclatureWebServiceClient() {
        }
        
        public NomenclatureWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NomenclatureWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NomenclatureWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NomenclatureWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KAT.Services.NomenclatureWebServiceReference.Violation[] GetViolations() {
            return base.Channel.GetViolations();
        }
        
        public System.Threading.Tasks.Task<KAT.Services.NomenclatureWebServiceReference.Violation[]> GetViolationsAsync() {
            return base.Channel.GetViolationsAsync();
        }
        
        public bool AddViolation(KAT.Services.NomenclatureWebServiceReference.Violation violation) {
            return base.Channel.AddViolation(violation);
        }
        
        public System.Threading.Tasks.Task<bool> AddViolationAsync(KAT.Services.NomenclatureWebServiceReference.Violation violation) {
            return base.Channel.AddViolationAsync(violation);
        }
        
        public bool DeleteViolation(long id) {
            return base.Channel.DeleteViolation(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteViolationAsync(long id) {
            return base.Channel.DeleteViolationAsync(id);
        }
        
        public bool UpdateViolation(KAT.Services.NomenclatureWebServiceReference.Violation violation) {
            return base.Channel.UpdateViolation(violation);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateViolationAsync(KAT.Services.NomenclatureWebServiceReference.Violation violation) {
            return base.Channel.UpdateViolationAsync(violation);
        }
        
        public KAT.Services.NomenclatureWebServiceReference.Camera[] GetCameras() {
            return base.Channel.GetCameras();
        }
        
        public System.Threading.Tasks.Task<KAT.Services.NomenclatureWebServiceReference.Camera[]> GetCamerasAsync() {
            return base.Channel.GetCamerasAsync();
        }
        
        public bool AddCamera(KAT.Services.NomenclatureWebServiceReference.Camera camera) {
            return base.Channel.AddCamera(camera);
        }
        
        public System.Threading.Tasks.Task<bool> AddCameraAsync(KAT.Services.NomenclatureWebServiceReference.Camera camera) {
            return base.Channel.AddCameraAsync(camera);
        }
        
        public bool DeleteCamera(long id) {
            return base.Channel.DeleteCamera(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCameraAsync(long id) {
            return base.Channel.DeleteCameraAsync(id);
        }
        
        public bool UpdateCamera(KAT.Services.NomenclatureWebServiceReference.Camera camera) {
            return base.Channel.UpdateCamera(camera);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCameraAsync(KAT.Services.NomenclatureWebServiceReference.Camera camera) {
            return base.Channel.UpdateCameraAsync(camera);
        }
        
        public KAT.Services.NomenclatureWebServiceReference.Policeman[] GetPolicemen() {
            return base.Channel.GetPolicemen();
        }
        
        public System.Threading.Tasks.Task<KAT.Services.NomenclatureWebServiceReference.Policeman[]> GetPolicemenAsync() {
            return base.Channel.GetPolicemenAsync();
        }
        
        public bool AddPoliceman(KAT.Services.NomenclatureWebServiceReference.Policeman policeman) {
            return base.Channel.AddPoliceman(policeman);
        }
        
        public System.Threading.Tasks.Task<bool> AddPolicemanAsync(KAT.Services.NomenclatureWebServiceReference.Policeman policeman) {
            return base.Channel.AddPolicemanAsync(policeman);
        }
        
        public bool DeletePoliceman(long id) {
            return base.Channel.DeletePoliceman(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePolicemanAsync(long id) {
            return base.Channel.DeletePolicemanAsync(id);
        }
        
        public bool UpdatePoliceman(KAT.Services.NomenclatureWebServiceReference.Policeman policeman) {
            return base.Channel.UpdatePoliceman(policeman);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePolicemanAsync(KAT.Services.NomenclatureWebServiceReference.Policeman policeman) {
            return base.Channel.UpdatePolicemanAsync(policeman);
        }
    }
}
